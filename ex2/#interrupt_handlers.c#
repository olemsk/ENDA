#include <stdint.h>
#include <stdbool.h>

#include "efm32gg.h"

  uint32_t  TEMP= 0x00;
  uint32_t  var_1 = 0x000;
  uint32_t  var_2 = 0x000;
  uint32_t value = 0x0000;

/* TIMER1 interrupt handler */
void __attribute__ ((interrupt)) TIMER1_IRQHandler() 
{  
  /*
    TODO feed new samples to the DAC
    remember to clear the pending interrupt by writing 1 to TIMER1_IFC
  */  
  
  
  // *GPIO_PA_DOUT = 0x0000;
  // TEMP++ ;
  // *GPIO_PA_DOUT = TEMP;

  // *DAC0_CH0DATA = TEMP;
  // *DAC0_CH1DATA = TEMP;
  // TEMP++;

  *GPIO_PA_DOUT = TEMP;
  *TIMER1_IFC = 1;
  
  
  
  
  
  
}

/* GPIO even pin interrupt handler */
void __attribute__ ((interrupt)) GPIO_EVEN_IRQHandler() 
{
    /* TODO handle button pressed event, remember to clear pending interrupt */
  uint32_t x = *GPIO_IF;
  *GPIO_IFC = x;
  uint32_t value = *GPIO_PC_DIN;


  if(value != value)
    {
   TEMP = value << 8;
    }
   // *GPIO_PA_DOUT = value;
  // *GPIO_PA_DOUT = *GPIO_PC_DIN << 8;
}

/* GPIO odd pin interrupt handler */
void __attribute__ ((interrupt)) GPIO_ODD_IRQHandler() 
{
    /* TODO handle button pressed event, remember to clear pending interrupt */
   uint32_t x = *GPIO_IF;
  *GPIO_IFC = x;
  uint32_t value = *GPIO_PC_DIN;
  << 8;
 
 *GPIO_PA_DOUT = value;
}
